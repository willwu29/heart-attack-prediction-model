<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='HeartAttackPredictionModelGeographicalPlot' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Percentage of Having a Heart Attack by US States' inline='true' name='federated.0qzacbb1i1idcj10t1dep0bzhyky' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Percentage of Having a Heart Attack by US States' name='textscan.19x26og1boqsu417ajt970jx1vcd'>
            <connection class='textscan' directory='C:/Users/yehua/Bootcamp/capstone/heart-attack-prediction-model' filename='Percentage of Having a Heart Attack by US States.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19x26og1boqsu417ajt970jx1vcd' name='Percentage of Having a Heart Attack by US States.csv' table='[Percentage of Having a Heart Attack by US States#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='No' ordinal='1' />
            <column datatype='real' name='Yes' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Percentage of Having a Heart Attack by US States.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Percentage of Having a Heart Attack by US States.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No]</local-name>
            <parent-name>[Percentage of Having a Heart Attack by US States.csv]</parent-name>
            <remote-alias>No</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yes]</local-name>
            <parent-name>[Percentage of Having a Heart Attack by US States.csv]</parent-name>
            <remote-alias>Yes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percentage of Having a Heart Attack by US States.csv' datatype='table' name='[__tableau_internal_object_id__].[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yehua/AppData/Local/Temp/TableauTemp/#TableauTemp_1yldtqz18opbrs112nzlm18pt5li.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/24/2025 09:43:30 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>0</ordinal>
              <family>Percentage of Having a Heart Attack by US States.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No</remote-name>
              <remote-type>5</remote-type>
              <local-name>[No]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No</remote-alias>
              <ordinal>1</ordinal>
              <family>Percentage of Having a Heart Attack by US States.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Yes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Yes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Yes</remote-alias>
              <ordinal>2</ordinal>
              <family>Percentage of Having a Heart Attack by US States.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Percentage of Having a Heart Attack by US States.csv' id='Percentage of Having a Heart Attack by US States.csv_EA46D516269245FE99AC6AB19A31FC5A'>
            <properties context=''>
              <relation connection='textscan.19x26og1boqsu417ajt970jx1vcd' name='Percentage of Having a Heart Attack by US States.csv' table='[Percentage of Having a Heart Attack by US States#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='No' ordinal='1' />
                  <column datatype='real' name='Yes' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Percentage of Having a Heart Attack by US States' name='federated.0qzacbb1i1idcj10t1dep0bzhyky' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qzacbb1i1idcj10t1dep0bzhyky'>
            <column datatype='real' name='[Yes]' role='measure' type='quantitative' />
            <column-instance column='[Yes]' derivation='Avg' name='[avg:Yes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[Longitude (generated)]' field-type='quantitative' max='32738540.311124261' min='22314193.159974072' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[Latitude (generated)]' field-type='quantitative' max='8811051.1007681638' min='443681.94636241987' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]' />
              <text column='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]' />
              <text column='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[none:state:nk]' />
              <lod column='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[none:state:nk]' />
              <geometry column='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qzacbb1i1idcj10t1dep0bzhyky].[Latitude (generated)]</rows>
        <cols>[federated.0qzacbb1i1idcj10t1dep0bzhyky].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BBD554AC-DDD2-4251-A16D-6BE8743A6A6D}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qzacbb1i1idcj10t1dep0bzhyky].[avg:Yes:qk]</field>
            <field>[federated.0qzacbb1i1idcj10t1dep0bzhyky].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C2E597EB-6D04-421F-AC9E-75C3D2406CF0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      eoT+f5G8o359abakAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
